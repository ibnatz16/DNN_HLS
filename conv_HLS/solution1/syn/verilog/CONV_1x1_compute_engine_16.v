// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CONV_1x1_compute_engine_16 (
        ap_clk,
        ap_rst,
        w0,
        b0,
        w1,
        b1,
        w2,
        b2,
        w3,
        b3,
        w4,
        b4,
        w5,
        b5,
        w6,
        b6,
        w7,
        b7,
        w8,
        b8,
        w9,
        b9,
        w10,
        b10,
        w11,
        b11,
        w12,
        b12,
        w13,
        b13,
        w14,
        b14,
        w15,
        b15,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] w0;
input  [15:0] b0;
input  [7:0] w1;
input  [15:0] b1;
input  [7:0] w2;
input  [15:0] b2;
input  [7:0] w3;
input  [15:0] b3;
input  [7:0] w4;
input  [15:0] b4;
input  [7:0] w5;
input  [15:0] b5;
input  [7:0] w6;
input  [15:0] b6;
input  [7:0] w7;
input  [15:0] b7;
input  [7:0] w8;
input  [15:0] b8;
input  [7:0] w9;
input  [15:0] b9;
input  [7:0] w10;
input  [15:0] b10;
input  [7:0] w11;
input  [15:0] b11;
input  [7:0] w12;
input  [15:0] b12;
input  [7:0] w13;
input  [15:0] b13;
input  [7:0] w14;
input  [15:0] b14;
input  [7:0] w15;
input  [15:0] b15;
output  [30:0] ap_return;
input   ap_ce;

reg[30:0] ap_return;

reg  signed [15:0] b15_read_reg_626;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg  signed [7:0] w15_read_reg_631;
reg  signed [15:0] b13_read_reg_636;
reg  signed [7:0] w13_read_reg_641;
reg  signed [15:0] b11_read_reg_646;
reg  signed [7:0] w11_read_reg_651;
reg  signed [15:0] b9_read_reg_656;
reg  signed [7:0] w9_read_reg_661;
reg  signed [15:0] b7_read_reg_666;
reg  signed [7:0] w7_read_reg_671;
reg  signed [15:0] b5_read_reg_676;
reg  signed [7:0] w5_read_reg_681;
reg  signed [15:0] b3_read_reg_686;
reg  signed [7:0] w3_read_reg_691;
reg  signed [15:0] b0_read_reg_696;
reg  signed [7:0] w0_read_reg_701;
wire    ap_block_pp0_stage0;
wire  signed [23:0] grp_fu_498_p2;
wire  signed [23:0] grp_fu_505_p2;
wire  signed [23:0] grp_fu_512_p2;
wire  signed [23:0] grp_fu_519_p2;
wire  signed [23:0] grp_fu_526_p2;
wire  signed [23:0] grp_fu_533_p2;
wire  signed [23:0] grp_fu_540_p2;
wire  signed [23:0] grp_fu_547_p2;
wire  signed [24:0] grp_fu_554_p3;
wire  signed [24:0] grp_fu_563_p3;
wire  signed [25:0] sext_ln1192_2_fu_403_p1;
wire  signed [25:0] sext_ln1192_1_fu_400_p1;
wire   [25:0] add_ln1192_3_fu_406_p2;
wire  signed [24:0] grp_fu_572_p3;
wire  signed [24:0] grp_fu_581_p3;
wire  signed [25:0] sext_ln1192_5_fu_419_p1;
wire  signed [25:0] sext_ln1192_4_fu_416_p1;
wire   [25:0] add_ln1192_6_fu_422_p2;
wire  signed [26:0] sext_ln1192_6_fu_428_p1;
wire  signed [26:0] sext_ln1192_3_fu_412_p1;
wire   [26:0] add_ln1192_7_fu_432_p2;
wire  signed [24:0] grp_fu_590_p3;
wire  signed [24:0] grp_fu_599_p3;
wire  signed [25:0] sext_ln1192_9_fu_445_p1;
wire  signed [25:0] sext_ln1192_8_fu_442_p1;
wire   [25:0] add_ln1192_10_fu_448_p2;
wire  signed [24:0] grp_fu_608_p3;
wire  signed [24:0] grp_fu_617_p3;
wire  signed [25:0] sext_ln1192_12_fu_461_p1;
wire  signed [25:0] sext_ln1192_11_fu_458_p1;
wire   [25:0] add_ln1192_13_fu_464_p2;
wire  signed [26:0] sext_ln1192_13_fu_470_p1;
wire  signed [26:0] sext_ln1192_10_fu_454_p1;
wire   [26:0] add_ln1192_14_fu_474_p2;
wire  signed [27:0] sext_ln1192_14_fu_480_p1;
wire  signed [27:0] sext_ln1192_7_fu_438_p1;
wire   [27:0] add_ln1192_fu_484_p2;
wire   [30:0] p_Val2_s_fu_490_p3;
reg    grp_fu_498_ce;
reg    grp_fu_505_ce;
reg    grp_fu_512_ce;
reg    grp_fu_519_ce;
reg    grp_fu_526_ce;
reg    grp_fu_533_ce;
reg    grp_fu_540_ce;
reg    grp_fu_547_ce;
reg    grp_fu_554_ce;
reg    grp_fu_563_ce;
reg    grp_fu_572_ce;
reg    grp_fu_581_ce;
reg    grp_fu_590_ce;
reg    grp_fu_599_ce;
reg    grp_fu_608_ce;
reg    grp_fu_617_ce;
reg    ap_ce_reg;
reg   [7:0] w0_int_reg;
reg   [15:0] b0_int_reg;
reg  signed [7:0] w1_int_reg;
reg  signed [15:0] b1_int_reg;
reg  signed [7:0] w2_int_reg;
reg  signed [15:0] b2_int_reg;
reg   [7:0] w3_int_reg;
reg   [15:0] b3_int_reg;
reg  signed [7:0] w4_int_reg;
reg  signed [15:0] b4_int_reg;
reg   [7:0] w5_int_reg;
reg   [15:0] b5_int_reg;
reg  signed [7:0] w6_int_reg;
reg  signed [15:0] b6_int_reg;
reg   [7:0] w7_int_reg;
reg   [15:0] b7_int_reg;
reg  signed [7:0] w8_int_reg;
reg  signed [15:0] b8_int_reg;
reg   [7:0] w9_int_reg;
reg   [15:0] b9_int_reg;
reg  signed [7:0] w10_int_reg;
reg  signed [15:0] b10_int_reg;
reg   [7:0] w11_int_reg;
reg   [15:0] b11_int_reg;
reg  signed [7:0] w12_int_reg;
reg  signed [15:0] b12_int_reg;
reg   [7:0] w13_int_reg;
reg   [15:0] b13_int_reg;
reg  signed [7:0] w14_int_reg;
reg  signed [15:0] b14_int_reg;
reg   [7:0] w15_int_reg;
reg   [15:0] b15_int_reg;
reg   [30:0] ap_return_int_reg;

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b1_int_reg),
    .din1(w1_int_reg),
    .ce(grp_fu_498_ce),
    .dout(grp_fu_498_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b2_int_reg),
    .din1(w2_int_reg),
    .ce(grp_fu_505_ce),
    .dout(grp_fu_505_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b4_int_reg),
    .din1(w4_int_reg),
    .ce(grp_fu_512_ce),
    .dout(grp_fu_512_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b6_int_reg),
    .din1(w6_int_reg),
    .ce(grp_fu_519_ce),
    .dout(grp_fu_519_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b8_int_reg),
    .din1(w8_int_reg),
    .ce(grp_fu_526_ce),
    .dout(grp_fu_526_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b10_int_reg),
    .din1(w10_int_reg),
    .ce(grp_fu_533_ce),
    .dout(grp_fu_533_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b12_int_reg),
    .din1(w12_int_reg),
    .ce(grp_fu_540_ce),
    .dout(grp_fu_540_p2)
);

CONV_1x1_mul_mul_16s_8s_24_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16s_8s_24_4_0_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b14_int_reg),
    .din1(w14_int_reg),
    .ce(grp_fu_547_ce),
    .dout(grp_fu_547_p2)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b0_read_reg_696),
    .din1(w0_read_reg_701),
    .din2(grp_fu_498_p2),
    .ce(grp_fu_554_ce),
    .dout(grp_fu_554_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b3_read_reg_686),
    .din1(w3_read_reg_691),
    .din2(grp_fu_505_p2),
    .ce(grp_fu_563_ce),
    .dout(grp_fu_563_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b5_read_reg_676),
    .din1(w5_read_reg_681),
    .din2(grp_fu_512_p2),
    .ce(grp_fu_572_ce),
    .dout(grp_fu_572_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b7_read_reg_666),
    .din1(w7_read_reg_671),
    .din2(grp_fu_519_p2),
    .ce(grp_fu_581_ce),
    .dout(grp_fu_581_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b9_read_reg_656),
    .din1(w9_read_reg_661),
    .din2(grp_fu_526_p2),
    .ce(grp_fu_590_ce),
    .dout(grp_fu_590_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b11_read_reg_646),
    .din1(w11_read_reg_651),
    .din2(grp_fu_533_p2),
    .ce(grp_fu_599_ce),
    .dout(grp_fu_599_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b13_read_reg_636),
    .din1(w13_read_reg_641),
    .din2(grp_fu_540_p2),
    .ce(grp_fu_608_ce),
    .dout(grp_fu_608_p3)
);

CONV_1x1_mac_muladd_16s_8s_24s_25_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16s_8s_24s_25_4_0_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b15_read_reg_626),
    .din1(w15_read_reg_631),
    .din2(grp_fu_547_p2),
    .ce(grp_fu_617_ce),
    .dout(grp_fu_617_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg[30 : 3] <= p_Val2_s_fu_490_p3[30 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        b0_int_reg <= b0;
        b10_int_reg <= b10;
        b11_int_reg <= b11;
        b12_int_reg <= b12;
        b13_int_reg <= b13;
        b14_int_reg <= b14;
        b15_int_reg <= b15;
        b1_int_reg <= b1;
        b2_int_reg <= b2;
        b3_int_reg <= b3;
        b4_int_reg <= b4;
        b5_int_reg <= b5;
        b6_int_reg <= b6;
        b7_int_reg <= b7;
        b8_int_reg <= b8;
        b9_int_reg <= b9;
        w0_int_reg <= w0;
        w10_int_reg <= w10;
        w11_int_reg <= w11;
        w12_int_reg <= w12;
        w13_int_reg <= w13;
        w14_int_reg <= w14;
        w15_int_reg <= w15;
        w1_int_reg <= w1;
        w2_int_reg <= w2;
        w3_int_reg <= w3;
        w4_int_reg <= w4;
        w5_int_reg <= w5;
        w6_int_reg <= w6;
        w7_int_reg <= w7;
        w8_int_reg <= w8;
        w9_int_reg <= w9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        b0_read_reg_696 <= b0_int_reg;
        b11_read_reg_646 <= b11_int_reg;
        b13_read_reg_636 <= b13_int_reg;
        b15_read_reg_626 <= b15_int_reg;
        b3_read_reg_686 <= b3_int_reg;
        b5_read_reg_676 <= b5_int_reg;
        b7_read_reg_666 <= b7_int_reg;
        b9_read_reg_656 <= b9_int_reg;
        w0_read_reg_701 <= w0_int_reg;
        w11_read_reg_651 <= w11_int_reg;
        w13_read_reg_641 <= w13_int_reg;
        w15_read_reg_631 <= w15_int_reg;
        w3_read_reg_691 <= w3_int_reg;
        w5_read_reg_681 <= w5_int_reg;
        w7_read_reg_671 <= w7_int_reg;
        w9_read_reg_661 <= w9_int_reg;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = p_Val2_s_fu_490_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_498_ce = 1'b1;
    end else begin
        grp_fu_498_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_505_ce = 1'b1;
    end else begin
        grp_fu_505_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_512_ce = 1'b1;
    end else begin
        grp_fu_512_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_519_ce = 1'b1;
    end else begin
        grp_fu_519_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_526_ce = 1'b1;
    end else begin
        grp_fu_526_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_533_ce = 1'b1;
    end else begin
        grp_fu_533_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_540_ce = 1'b1;
    end else begin
        grp_fu_540_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_547_ce = 1'b1;
    end else begin
        grp_fu_547_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_554_ce = 1'b1;
    end else begin
        grp_fu_554_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_563_ce = 1'b1;
    end else begin
        grp_fu_563_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_572_ce = 1'b1;
    end else begin
        grp_fu_572_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_581_ce = 1'b1;
    end else begin
        grp_fu_581_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_590_ce = 1'b1;
    end else begin
        grp_fu_590_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_599_ce = 1'b1;
    end else begin
        grp_fu_599_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_608_ce = 1'b1;
    end else begin
        grp_fu_608_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_617_ce = 1'b1;
    end else begin
        grp_fu_617_ce = 1'b0;
    end
end

assign add_ln1192_10_fu_448_p2 = ($signed(sext_ln1192_9_fu_445_p1) + $signed(sext_ln1192_8_fu_442_p1));

assign add_ln1192_13_fu_464_p2 = ($signed(sext_ln1192_12_fu_461_p1) + $signed(sext_ln1192_11_fu_458_p1));

assign add_ln1192_14_fu_474_p2 = ($signed(sext_ln1192_13_fu_470_p1) + $signed(sext_ln1192_10_fu_454_p1));

assign add_ln1192_3_fu_406_p2 = ($signed(sext_ln1192_2_fu_403_p1) + $signed(sext_ln1192_1_fu_400_p1));

assign add_ln1192_6_fu_422_p2 = ($signed(sext_ln1192_5_fu_419_p1) + $signed(sext_ln1192_4_fu_416_p1));

assign add_ln1192_7_fu_432_p2 = ($signed(sext_ln1192_6_fu_428_p1) + $signed(sext_ln1192_3_fu_412_p1));

assign add_ln1192_fu_484_p2 = ($signed(sext_ln1192_14_fu_480_p1) + $signed(sext_ln1192_7_fu_438_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign p_Val2_s_fu_490_p3 = {{add_ln1192_fu_484_p2}, {3'd0}};

assign sext_ln1192_10_fu_454_p1 = $signed(add_ln1192_10_fu_448_p2);

assign sext_ln1192_11_fu_458_p1 = grp_fu_608_p3;

assign sext_ln1192_12_fu_461_p1 = grp_fu_617_p3;

assign sext_ln1192_13_fu_470_p1 = $signed(add_ln1192_13_fu_464_p2);

assign sext_ln1192_14_fu_480_p1 = $signed(add_ln1192_14_fu_474_p2);

assign sext_ln1192_1_fu_400_p1 = grp_fu_554_p3;

assign sext_ln1192_2_fu_403_p1 = grp_fu_563_p3;

assign sext_ln1192_3_fu_412_p1 = $signed(add_ln1192_3_fu_406_p2);

assign sext_ln1192_4_fu_416_p1 = grp_fu_572_p3;

assign sext_ln1192_5_fu_419_p1 = grp_fu_581_p3;

assign sext_ln1192_6_fu_428_p1 = $signed(add_ln1192_6_fu_422_p2);

assign sext_ln1192_7_fu_438_p1 = $signed(add_ln1192_7_fu_432_p2);

assign sext_ln1192_8_fu_442_p1 = grp_fu_590_p3;

assign sext_ln1192_9_fu_445_p1 = grp_fu_599_p3;

always @ (posedge ap_clk) begin
    ap_return_int_reg[2:0] <= 3'b000;
end

endmodule //CONV_1x1_compute_engine_16
